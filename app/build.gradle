plugins {
    id 'java'
    id 'java-library'
    id 'checkstyle'
    id 'jacoco'
    id 'application'
    id "io.ebean" version "13.14.1"
}

group 'hexlet.code'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

application {
    mainClass = 'hexlet.code.App'
}

dependencies {
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.1'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.1'
    testImplementation 'io.ebean:ebean-test:13.13.0'
    testImplementation 'com.squareup.okhttp3:mockwebserver:4.10.0'
    implementation group: 'io.javalin', name: 'javalin', version: '4.3.0'
    implementation group: 'org.slf4j', name: 'slf4j-simple', version: '2.0.6'

    implementation group: 'io.ebean', name: 'ebean', version: '13.13.0'
    implementation group: 'io.ebean', name: 'ebean-ddl-generator', version: '13.13.0'
    implementation group: 'io.ebean', name: 'ebean-migration', version: '13.7.0'
    annotationProcessor group: 'io.ebean', name: 'querybean-generator', version: '13.13.0'
    implementation group: 'io.ebean', name: 'ebean-querybean', version: '13.13.0'
    implementation group: 'io.ebean', name: 'ebean-annotation', version: '8.3'

    implementation 'org.glassfish.jaxb:jaxb-runtime:2.3.5'
    implementation 'javax.activation:activation:1.1.1'

    implementation group: 'com.h2database', name: 'h2', version: '2.1.214'
    implementation group: 'org.postgresql', name: 'postgresql', version: '42.5.4'

    implementation 'org.thymeleaf:thymeleaf:3.0.15.RELEASE'
    implementation 'nz.net.ultraq.thymeleaf:thymeleaf-layout-dialect:3.1.0'
    implementation 'org.thymeleaf.extras:thymeleaf-extras-java8time:3.0.4.RELEASE'
    implementation 'org.webjars:bootstrap:5.1.1'
    implementation 'org.apache.httpcomponents:httpclient:4.5.14'

    implementation 'com.konghq:unirest-java:3.11.09'
    implementation 'org.jsoup:jsoup:1.15.4'
    implementation 'commons-io:commons-io:2.11.0'
}

compileJava {
    options.release = 17
    options.encoding = 'UTF-8'
}

test {
    useJUnitPlatform()
    finalizedBy jacocoTestReport
}

jacocoTestReport {
    reports {
        xml.required = true
    }

    dependsOn test // tests are required to run before generating the report
}

task stage(dependsOn: ['clean', 'installDist'])
installDist.mustRunAfter clean

task generateMigrations(type: JavaExec) {
    classpath = sourceSets.main.runtimeClasspath
    mainClass = 'hexlet.code.MigrationGenerator'
}

tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}